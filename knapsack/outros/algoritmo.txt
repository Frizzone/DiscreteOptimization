def dynamic_programming(capacity, items):
    value = 0
    weight = 0

    #matrix = [[0 for x in range(len(items) + 1)] for x in range(capacity + 1)]
    matrix = [[[0 for x in range(2)] for x in range(len(items) + 1)] for x in range(capacity + 1)]
    n = len(items)
    for i in range(n+1):
        for k in range(capacity+1):
            if (i==0 or k==0): 
                #quando é zero, não tem nenhum item
                matrix[k][i][0]=0
            elif (items[i-1].weight <= k): 
                if(items[i-1].value + matrix[k-items[i-1].weight][i-1][0]):
                    matrix[k][i][0] = items[i-1].value + matrix[k-items[i-1].weight][i-1][0]
                    matrix[k][i][1] = matrix[k-items[i-1].weight][i-1][1].append(items[i-1])
                else:
                    matrix[k][i][0] = matrix[k][i-1][0]
                    matrix[k][i][1] = matrix[k][i-1][1]

                
            else: matrix[k][i][0] = matrix[k][i-1][0]
    return matrix[capacity][len(items)][0]